services:
  db:
    container_name: db
    image: postgis/postgis:16-3.5
    restart: always
    env_file:
      - tgBot2/.env
    volumes:
      - ./postgres:/var/lib/postgressql/data
    ports:
      - 5432:5432

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  # rabbitmq:
  #   image: rabbitmq:3-management  # Образ RabbitMQ с веб-интерфейсом
  #   hostname: rabbitmq
  #   restart: always 
  #   env_file:
  #     - tgBot2/.env            
  #   volumes:
  #     - ./rabbitmq:/var/lib/rabbitmq    
  #   ports:
  #     - "5672:5672"  # Порт для AMQP протокола
  #     - "15672:15672"  # Порт для веб-интерфейса
 
  # celery:
  #   build: .
  #   command: celery -A tgBot2 worker --loglevel=info
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - rabbitmq

  # celery-beat:
  #   build: .
  #   command: celery -A tgBot2 beat --loglevel=info
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - rabbitmq

  bot:
    container_name: bot
    build: .
    restart: always
    command: >
      sh -c " sleep 17 &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py webhookstart &&
      sleep 1 &&
      uvicorn tgBot2.asgi:application --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./txt_files:/tgBot2 # python manage.py runserver 0.0.0.0:8000 
      - .:/app              # Добавляем том для кода, чтобы изменения применялись сразу
    ports:                  # uvicorn tgBot2.asgi:application --host 0.0.0.0 --port 8000"
      - "8000:8000"         # gunicorn --workers 3 --bind 0.0.0.0:8000 tgBot2.wsgi:application"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379


# Определяем том для PostgreSQL
volumes:
  redis_data:
  postgres_data: